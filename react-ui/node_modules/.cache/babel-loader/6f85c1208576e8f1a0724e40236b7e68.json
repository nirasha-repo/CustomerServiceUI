{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\Malindo\\\\MalindoTestUI\\\\react-ui\\\\src\\\\components\\\\add-customer.js\";\nimport React, { Component } from \"react\";\nimport CustomerDataService from \"../services/customer.service\";\nexport default class AddCustomer extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeFirstName = this.onChangeFirstName.bind(this);\n    this.onChangeLastName = this.onChangeLastName.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangeDateOfBirth = this.onChangeDateOfBirth.bind(this);\n    this.onChangePhoneNumber = this.onChangePhoneNumber.bind(this);\n    this.onChangeAddress = this.onChangeAddress.bind(this);\n    this.onChangeSuburb = this.onChangeSuburb.bind(this);\n    this.onChangePostcode = this.onChangePostcode.bind(this);\n    this.saveCustomer = this.saveCustomer.bind(this);\n    this.newCustomer = this.newCustomer.bind(this);\n    this.state = {\n      customer: {\n        title: 'Mr.'\n      },\n      id: null,\n      published: false,\n      submitted: false,\n      errorMessage: ''\n    };\n  }\n\n  setCustomer(customer) {\n    this.setState({\n      customer: customer\n    });\n  }\n\n  onChangeTitle(e) {\n    const customer = { ...this.state.customer\n    };\n    customer.title = e.target.value;\n    this.setCustomer(customer);\n  }\n\n  onChangeFirstName(e) {\n    const customer = { ...this.state.customer\n    };\n    customer.firstName = e.target.value;\n    this.setCustomer(customer);\n  }\n\n  onChangeLastName(e) {\n    const customer = { ...this.state.customer\n    };\n    customer.lastName = e.target.value;\n    this.setCustomer(customer);\n  }\n\n  onChangeEmail(e) {\n    const customer = { ...this.state.customer\n    };\n    customer.emailAddress = e.target.value;\n    this.setCustomer(customer);\n  }\n\n  onChangeDateOfBirth(e) {\n    const customer = { ...this.state.customer\n    };\n    customer.dateOfBirth = e.target.value;\n    this.setCustomer(customer);\n  }\n\n  onChangePhoneNumber(e) {\n    const customer = { ...this.state.customer\n    };\n    customer.mobilePhoneNo = e.target.value;\n    this.setCustomer(customer);\n  }\n\n  onChangeAddress(e) {\n    const customer = { ...this.state.customer\n    };\n    customer.streetAddress = e.target.value;\n    this.setCustomer(customer);\n  }\n\n  onChangeSuburb(e) {\n    const customer = { ...this.state.customer\n    };\n    customer.suburbCity = e.target.value;\n    this.setCustomer(customer);\n  }\n\n  onChangePostcode(e) {\n    const customer = { ...this.state.customer\n    };\n    customer.postCode = e.target.value;\n    this.setCustomer(customer);\n  }\n\n  validateCustomer() {\n    var customer = this.state.customer;\n\n    if (customer.firstName === undefined || customer.firstName === '') {\n      return {\n        isValid: false,\n        message: 'First Name cannot be empty!'\n      };\n    }\n\n    if (!/^[a-zA-Z ]+$/.test(customer.firstName)) {\n      return {\n        isValid: false,\n        message: 'Please enter only alphabetical letters for First Name!'\n      };\n    }\n\n    if (customer.lastName === undefined || customer.lastName === '') {\n      return {\n        isValid: false,\n        message: 'Last Name cannot be empty!'\n      };\n    }\n\n    if (!/^[a-zA-Z ]+$/.test(customer.lastName)) {\n      return {\n        isValid: false,\n        message: 'Please enter only alphabetical letters for Last Name!'\n      };\n    }\n\n    if (customer.emailAddress === undefined || customer.emailAddress === '') {\n      return {\n        isValid: false,\n        message: 'Email cannot be empty!'\n      };\n    }\n\n    if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(customer.emailAddress)) {\n      return {\n        isValid: false,\n        message: 'Invalid emailAddress!'\n      };\n    }\n\n    if (customer.dateOfBirth === undefined || customer.dateOfBirth === '') {\n      return {\n        isValid: false,\n        message: 'Date of Birth cannot be empty!'\n      };\n    }\n\n    if (!/^([0-9]{2})\\/([0-9]{2})\\/([0-9]{4})$/.test(customer.dateOfBirth)) {\n      return {\n        isValid: false,\n        message: 'Invalid date of birth!'\n      };\n    }\n\n    if (customer.mobilePhoneNo !== undefined && customer.mobilePhoneNo !== '' && !/^[0-9]+$/.test(customer.mobilePhoneNo)) {\n      return {\n        isValid: false,\n        message: 'Please enter only numerics for Phone Number!'\n      };\n    }\n\n    if (customer.postCode !== undefined && customer.postCode !== '' && !/^[0-9]+$/.test(customer.postCode)) {\n      return {\n        isValid: false,\n        message: 'Please enter only numerics for Postcode!'\n      };\n    }\n\n    return {\n      isValid: true,\n      message: ''\n    };\n  }\n\n  saveCustomer() {\n    var data = this.state.customer;\n    var error = this.validateCustomer();\n\n    if (error.isValid) {\n      this.setState({\n        errorMessage: ''\n      });\n      debugger;\n      CustomerDataService.create(data).then(response => {\n        this.setState({\n          published: response.data.published,\n          submitted: true\n        });\n        console.log(response.data);\n      }).catch(e => {\n        console.log(e);\n        debugger;\n        this.setState({\n          errorMessage: 'Internal server error!'\n        });\n      });\n    } else {\n      this.setState({\n        errorMessage: error.message\n      });\n    }\n  }\n\n  newCustomer() {\n    this.setState({\n      id: null,\n      title: \"\",\n      description: \"\",\n      published: false,\n      submitted: false\n    });\n  }\n\n  render() {\n    const {\n      errorMessage\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"submit-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, this.state.submitted ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"You submitted successfully!\"), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.newCustomer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Add\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Add Customer \"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"salutation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Title \", React.createElement(\"span\", {\n      className: \"text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"select\", {\n      className: \"form-control\",\n      onChange: this.onChangeSalutation,\n      name: \"salutation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"Mr.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Mr.\"), React.createElement(\"option\", {\n      value: \"Mrs.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Mrs.\"), React.createElement(\"option\", {\n      value: \"Miss\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Miss.\"), React.createElement(\"option\", {\n      value: \"Mstr.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Mstr.\"))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"firstName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"First Name \", React.createElement(\"span\", {\n      className: \"text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"input\", {\n      type: \"text\",\n      autoComplete: \"off\",\n      className: \"form-control\",\n      id: \"firstName\",\n      required: true,\n      value: this.state.customer.firstName,\n      onChange: this.onChangeFirstName,\n      name: \"firstName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"lastName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Last Name \", React.createElement(\"span\", {\n      className: \"text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"input\", {\n      type: \"text\",\n      autoComplete: \"off\",\n      className: \"form-control\",\n      id: \"lastName\",\n      required: true,\n      value: this.state.customer.lastName,\n      onChange: this.onChangeLastName,\n      name: \"lastName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"emailAddress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"Email \", React.createElement(\"span\", {\n      className: \"text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"input\", {\n      type: \"text\",\n      autoComplete: \"off\",\n      className: \"form-control\",\n      id: \"emailAddress\",\n      required: true,\n      value: this.state.customer.emailAddress,\n      onChange: this.onChangeEmail,\n      name: \"emailAddress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"dateOfBirth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Date of Birth \", React.createElement(\"span\", {\n      className: \"text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"input\", {\n      type: \"text\",\n      autoComplete: \"off\",\n      className: \"form-control\",\n      id: \"dateOfBirth\",\n      required: true,\n      value: this.state.customer.dateOfBirth,\n      onChange: this.onChangeDateOfBirth,\n      name: \"dateOfBirth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }), \"ex: 15/06/1997\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"mobilePhoneNo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"Phone Number\"), React.createElement(\"input\", {\n      type: \"text\",\n      autoComplete: \"off\",\n      className: \"form-control\",\n      id: \"mobilePhoneNo\",\n      required: true,\n      value: this.state.customer.mobilePhoneNo,\n      onChange: this.onChangePhoneNumber,\n      name: \"mobilePhoneNo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"streetAddress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"Address\"), React.createElement(\"input\", {\n      type: \"text\",\n      autoComplete: \"off\",\n      className: \"form-control\",\n      id: \"streetAddress\",\n      required: true,\n      value: this.state.customer.streetAddress,\n      onChange: this.onChangeAddress,\n      name: \"streetAddress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"suburbCity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"Suburb\"), React.createElement(\"input\", {\n      type: \"text\",\n      autoComplete: \"off\",\n      className: \"form-control\",\n      id: \"suburbCity\",\n      required: true,\n      value: this.state.customer.suburbCity,\n      onChange: this.onChangeSuburb,\n      name: \"suburbCity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"postCode\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, \"Postcode\"), React.createElement(\"input\", {\n      type: \"text\",\n      autoComplete: \"off\",\n      className: \"form-control\",\n      id: \"postCode\",\n      required: true,\n      value: this.state.customer.postCode,\n      onChange: this.onChangePostcode,\n      name: \"postCode\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.saveCustomer,\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \"Add\")), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, errorMessage !== '' ? React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, errorMessage) : null)));\n  }\n\n}","map":{"version":3,"sources":["C:/Dev/Malindo/MalindoTestUI/react-ui/src/components/add-customer.js"],"names":["React","Component","CustomerDataService","AddCustomer","constructor","props","onChangeTitle","bind","onChangeFirstName","onChangeLastName","onChangeEmail","onChangeDateOfBirth","onChangePhoneNumber","onChangeAddress","onChangeSuburb","onChangePostcode","saveCustomer","newCustomer","state","customer","title","id","published","submitted","errorMessage","setCustomer","setState","e","target","value","firstName","lastName","emailAddress","dateOfBirth","mobilePhoneNo","streetAddress","suburbCity","postCode","validateCustomer","undefined","isValid","message","test","data","error","create","then","response","console","log","catch","description","render","onChangeSalutation"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport CustomerDataService from \"../services/customer.service\";\r\n\r\nexport default class AddCustomer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.onChangeFirstName = this.onChangeFirstName.bind(this);\r\n    this.onChangeLastName = this.onChangeLastName.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangeDateOfBirth = this.onChangeDateOfBirth.bind(this);\r\n    this.onChangePhoneNumber = this.onChangePhoneNumber.bind(this);\r\n    this.onChangeAddress = this.onChangeAddress.bind(this);\r\n    this.onChangeSuburb = this.onChangeSuburb.bind(this);\r\n    this.onChangePostcode = this.onChangePostcode.bind(this);\r\n    this.saveCustomer = this.saveCustomer.bind(this);\r\n    this.newCustomer = this.newCustomer.bind(this);    \r\n\r\n    this.state = {\r\n      customer: {title: 'Mr.'},      \r\n      id: null,\r\n      published: false,\r\n      submitted: false,\r\n      errorMessage: ''   \r\n    };\r\n  }\r\n\r\n  setCustomer(customer) {\r\n    this.setState({\r\n      customer: customer\r\n    });\r\n  }\r\n\r\n  onChangeTitle(e) {   \r\n    const customer = {...this.state.customer};\r\n    customer.title = e.target.value;\r\n    this.setCustomer(customer);\r\n  }\r\n\r\n  onChangeFirstName(e) {\r\n    const customer = {...this.state.customer};\r\n    customer.firstName = e.target.value;\r\n    this.setCustomer(customer);\r\n  }\r\n\r\n  onChangeLastName(e) {\r\n    const customer = {...this.state.customer};\r\n    customer.lastName = e.target.value;\r\n    this.setCustomer(customer);\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    const customer = {...this.state.customer};\r\n    customer.emailAddress = e.target.value;\r\n    this.setCustomer(customer);\r\n  }\r\n\r\n  onChangeDateOfBirth(e) {\r\n    const customer = {...this.state.customer};\r\n    customer.dateOfBirth = e.target.value;\r\n    this.setCustomer(customer);\r\n  }\r\n\r\n  onChangePhoneNumber(e) {\r\n    const customer = {...this.state.customer};\r\n    customer.mobilePhoneNo = e.target.value;\r\n    this.setCustomer(customer);\r\n  }\r\n\r\n  onChangeAddress(e) {\r\n    const customer = {...this.state.customer};\r\n    customer.streetAddress = e.target.value;\r\n    this.setCustomer(customer);\r\n  }\r\n\r\n  onChangeSuburb(e) {\r\n    const customer = {...this.state.customer};\r\n    customer.suburbCity = e.target.value;\r\n    this.setCustomer(customer);\r\n  }\r\n\r\n  onChangePostcode(e) {\r\n    const customer = {...this.state.customer};\r\n    customer.postCode = e.target.value;\r\n    this.setCustomer(customer);\r\n  }\r\n\r\n  validateCustomer() {\r\n    var customer = this.state.customer;\r\n\r\n    if(customer.firstName === undefined || customer.firstName === '') {\r\n      return {isValid: false, message: 'First Name cannot be empty!'};      \r\n    }\r\n     \r\n    if(!(/^[a-zA-Z ]+$/.test(customer.firstName))) {\r\n      return {isValid: false, message: 'Please enter only alphabetical letters for First Name!'};      \r\n    }\r\n\r\n    if(customer.lastName === undefined || customer.lastName === '') {\r\n      return {isValid: false, message: 'Last Name cannot be empty!'};      \r\n    }\r\n     \r\n    if(!(/^[a-zA-Z ]+$/.test(customer.lastName))) {\r\n      return {isValid: false, message: 'Please enter only alphabetical letters for Last Name!'};      \r\n    }\r\n\r\n    if(customer.emailAddress === undefined || customer.emailAddress === '') {\r\n      return {isValid: false, message: 'Email cannot be empty!'};      \r\n    }\r\n     \r\n    if(!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(customer.emailAddress))) {\r\n      return {isValid: false, message: 'Invalid emailAddress!'};      \r\n    }\r\n\r\n    if(customer.dateOfBirth === undefined || customer.dateOfBirth === '') {\r\n      return {isValid: false, message: 'Date of Birth cannot be empty!'};      \r\n    }\r\n     \r\n    if(!(/^([0-9]{2})\\/([0-9]{2})\\/([0-9]{4})$/.test(customer.dateOfBirth))) {\r\n      return {isValid: false, message: 'Invalid date of birth!'};      \r\n    }\r\n     \r\n    if(customer.mobilePhoneNo !== undefined && customer.mobilePhoneNo !== '' && !(/^[0-9]+$/.test(customer.mobilePhoneNo))) {\r\n      return {isValid: false, message: 'Please enter only numerics for Phone Number!'};      \r\n    }  \r\n\r\n    if(customer.postCode !== undefined && customer.postCode !== '' && !(/^[0-9]+$/.test(customer.postCode))) {\r\n      return {isValid: false, message: 'Please enter only numerics for Postcode!'};      \r\n    } \r\n    \r\n    return {isValid: true, message: ''};\r\n  }\r\n\r\n  saveCustomer() {\r\n    var data = this.state.customer;\r\n    var error = this.validateCustomer();\r\n\r\n    if(error.isValid) {\r\n      this.setState({errorMessage: ''}) \r\n      debugger; \r\n      CustomerDataService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          published: response.data.published,     \r\n          submitted: true\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);debugger;\r\n        this.setState({errorMessage: 'Internal server error!'})\r\n      });\r\n    }\r\n    else {\r\n      this.setState({errorMessage: error.message});\r\n    }\r\n  }\r\n\r\n  newCustomer() {\r\n    this.setState({\r\n      id: null,\r\n      title: \"\",\r\n      description: \"\",\r\n      published: false,\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { errorMessage} = this.state;\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newCustomer}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h4>Add Customer </h4>\r\n           \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"salutation\">Title <span className=\"text-danger\">*</span></label>\r\n              <select className=\"form-control\" onChange={this.onChangeSalutation} name=\"salutation\">\r\n                <option value=\"Mr.\">Mr.</option>\r\n                <option value=\"Mrs.\">Mrs.</option>\r\n                <option value=\"Miss\">Miss.</option>\r\n                <option value=\"Mstr.\">Mstr.</option>    \r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"firstName\">First Name <span className=\"text-danger\">*</span></label>\r\n              <input\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                className=\"form-control\"\r\n                id=\"firstName\"\r\n                required\r\n                value={this.state.customer.firstName}\r\n                onChange={this.onChangeFirstName}\r\n                name=\"firstName\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"lastName\">Last Name <span className=\"text-danger\">*</span></label>\r\n              <input\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                className=\"form-control\"\r\n                id=\"lastName\"\r\n                required\r\n                value={this.state.customer.lastName}\r\n                onChange={this.onChangeLastName}\r\n                name=\"lastName\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"emailAddress\">Email <span className=\"text-danger\">*</span></label>\r\n              <input\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                className=\"form-control\"\r\n                id=\"emailAddress\"\r\n                required\r\n                value={this.state.customer.emailAddress}\r\n                onChange={this.onChangeEmail}\r\n                name=\"emailAddress\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"dateOfBirth\">Date of Birth <span className=\"text-danger\">*</span></label>\r\n              <input\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                className=\"form-control\"\r\n                id=\"dateOfBirth\"\r\n                required\r\n                value={this.state.customer.dateOfBirth}\r\n                onChange={this.onChangeDateOfBirth}\r\n                name=\"dateOfBirth\"\r\n              />\r\n              ex: 15/06/1997\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"mobilePhoneNo\">Phone Number</label>\r\n              <input\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                className=\"form-control\"\r\n                id=\"mobilePhoneNo\"\r\n                required\r\n                value={this.state.customer.mobilePhoneNo}\r\n                onChange={this.onChangePhoneNumber}\r\n                name=\"mobilePhoneNo\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"streetAddress\">Address</label>\r\n              <input\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                className=\"form-control\"\r\n                id=\"streetAddress\"\r\n                required\r\n                value={this.state.customer.streetAddress}\r\n                onChange={this.onChangeAddress}\r\n                name=\"streetAddress\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"suburbCity\">Suburb</label>\r\n              <input\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                className=\"form-control\"\r\n                id=\"suburbCity\"\r\n                required\r\n                value={this.state.customer.suburbCity}\r\n                onChange={this.onChangeSuburb}\r\n                name=\"suburbCity\"\r\n              />\r\n            </div>\t\t\t\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"postCode\">Postcode</label>\r\n              <input\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                className=\"form-control\"\r\n                id=\"postCode\"\r\n                required\r\n                value={this.state.customer.postCode}\r\n                onChange={this.onChangePostcode}\r\n                name=\"postCode\"\r\n              />\r\n            </div>            \r\n\r\n            <div className=\"form-group\">\r\n              <button onClick={this.saveCustomer} className=\"btn btn-success\">\r\n                Add\r\n              </button>\r\n            </div> \r\n\r\n            <div className=\"form-group\">     \r\n                {errorMessage !== '' ? \r\n                  <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {errorMessage}\r\n                  </div>\r\n                  : null} \r\n            </div>\r\n            \r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}