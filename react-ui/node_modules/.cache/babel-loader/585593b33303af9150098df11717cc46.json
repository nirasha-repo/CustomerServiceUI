{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\Malindo\\\\MalindoTestUI\\\\react-ui\\\\src\\\\components\\\\add-customer.js\";\nimport React, { Component } from \"react\";\nimport CustomerDataService from \"../services/customer.service\";\nexport default class AddCustomer extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeFirstName = this.onChangeFirstName.bind(this);\n    this.onChangeLastName = this.onChangeLastName.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangeDateOfBirth = this.onChangeDateOfBirth.bind(this);\n    this.onChangePhoneNumber = this.onChangePhoneNumber.bind(this);\n    this.onChangeAddress = this.onChangeAddress.bind(this);\n    this.onChangeSuburb = this.onChangeSuburb.bind(this);\n    this.onChangePostcode = this.onChangePostcode.bind(this);\n    this.saveCustomer = this.saveCustomer.bind(this);\n    this.updateCustomer = this.updateCustomer.bind(this);\n    this.newCustomer = this.newCustomer.bind(this);\n    this.initialise = this.initialise.bind(this);\n    this.getCustomer = this.getCustomer.bind(this);\n    this.formatDateForCustomer = this.formatDateForCustomer.bind(this);\n    this.initialise();\n  }\n\n  initialise() {\n    this.state = {\n      customer: {\n        title: 'Mr.'\n      },\n      id: null,\n      published: false,\n      submitted: false,\n      errorMessage: ''\n    };\n  }\n\n  componentDidMount() {\n    const customerId = this.props.match.params.id;\n\n    if (customerId) {\n      this.getCustomer(customerId);\n    }\n\n    var test = this.state.customer;\n  }\n\n  getCustomer(id) {\n    CustomerDataService.get(id).then(response => {\n      this.setState({\n        customer: response.data\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  formatDateForCustomer(customer) {\n    if (customer.customerId !== undefined && customer.dateOfBirth !== undefined && customer.customerId > 0) {\n      if (customer.dateOfBirth.includes('T') && customer.dateOfBirth.length > 10) {\n        var stringdate = customer.dateOfBirth;\n        var newdate = stringdate.replace(\"T00:00:00\");\n        var year = newdate.substr(0, 4);\n        var month = newdate.substr(5, 2);\n        var day = newdate.substr(8, 2);\n        var formattedDate = day + \"/\" + month + \"/\" + year;\n        customer.dateOfBirth = formattedDate;\n        return customer;\n      }\n    }\n\n    return customer;\n  }\n\n  setCustomer(customer) {\n    this.setState({\n      customer: customer\n    });\n  }\n\n  onChangeTitle(e) {\n    const customer = { ...this.state.customer\n    };\n    customer.title = e.target.value;\n    this.setCustomer(customer);\n  }\n\n  onChangeFirstName(e) {\n    const customer = { ...this.state.customer\n    };\n    customer.firstName = e.target.value;\n    this.setCustomer(customer);\n  }\n\n  onChangeLastName(e) {\n    const customer = { ...this.state.customer\n    };\n    customer.lastName = e.target.value;\n    this.setCustomer(customer);\n  }\n\n  onChangeEmail(e) {\n    const customer = { ...this.state.customer\n    };\n    customer.emailAddress = e.target.value;\n    this.setCustomer(customer);\n  }\n\n  onChangeDateOfBirth(e) {\n    const customer = { ...this.state.customer\n    };\n    customer.dateOfBirth = e.target.value;\n    this.setCustomer(customer);\n  }\n\n  onChangePhoneNumber(e) {\n    const customer = { ...this.state.customer\n    };\n    customer.mobilePhoneNo = e.target.value;\n    this.setCustomer(customer);\n  }\n\n  onChangeAddress(e) {\n    const customer = { ...this.state.customer\n    };\n    customer.streetAddress = e.target.value;\n    this.setCustomer(customer);\n  }\n\n  onChangeSuburb(e) {\n    const customer = { ...this.state.customer\n    };\n    customer.suburbCity = e.target.value;\n    this.setCustomer(customer);\n  }\n\n  onChangePostcode(e) {\n    const customer = { ...this.state.customer\n    };\n    customer.postCode = e.target.value;\n    this.setCustomer(customer);\n  }\n\n  validateCustomer() {\n    var customer = this.state.customer;\n\n    if (customer.firstName === undefined || customer.firstName === '') {\n      return {\n        isValid: false,\n        message: 'First Name cannot be empty!'\n      };\n    }\n\n    if (!/^[a-zA-Z ]+$/.test(customer.firstName)) {\n      return {\n        isValid: false,\n        message: 'Please enter only alphabetical letters for First Name!'\n      };\n    }\n\n    if (customer.lastName === undefined || customer.lastName === '') {\n      return {\n        isValid: false,\n        message: 'Last Name cannot be empty!'\n      };\n    }\n\n    if (!/^[a-zA-Z ]+$/.test(customer.lastName)) {\n      return {\n        isValid: false,\n        message: 'Please enter only alphabetical letters for Last Name!'\n      };\n    }\n\n    if (customer.emailAddress === undefined || customer.emailAddress === '') {\n      return {\n        isValid: false,\n        message: 'Email cannot be empty!'\n      };\n    }\n\n    if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(customer.emailAddress)) {\n      return {\n        isValid: false,\n        message: 'Invalid emailAddress!'\n      };\n    }\n\n    if (customer.dateOfBirth === undefined || customer.dateOfBirth === '') {\n      return {\n        isValid: false,\n        message: 'Date of Birth cannot be empty!'\n      };\n    }\n\n    if (!/^([0-9]{2})\\/([0-9]{2})\\/([0-9]{4})$/.test(customer.dateOfBirth)) {\n      return {\n        isValid: false,\n        message: 'Invalid date of birth!'\n      };\n    }\n\n    if (customer.mobilePhoneNo !== undefined && customer.mobilePhoneNo !== '' && !/^[0-9]+$/.test(customer.mobilePhoneNo)) {\n      return {\n        isValid: false,\n        message: 'Please enter only numerics for Phone Number!'\n      };\n    }\n\n    if (customer.postCode !== undefined && customer.postCode !== '' && !/^[0-9]+$/.test(customer.postCode)) {\n      return {\n        isValid: false,\n        message: 'Please enter only numerics for Postcode!'\n      };\n    }\n\n    return {\n      isValid: true,\n      message: ''\n    };\n  }\n\n  updateCustomer() {\n    var data = this.state.customer;\n    var error = this.validateCustomer();\n    var dobArr = data.dateOfBirth.split('/');\n    var newData = { ...data\n    };\n    var jsonDob = dobArr[2] + '-' + dobArr[1] + '-' + dobArr[0] + 'T00:00:00';\n    newData.dateOfBirth = jsonDob;\n\n    if (error.isValid) {\n      this.setState({\n        errorMessage: ''\n      });\n      CustomerDataService.update(data.customerId, newData).then(response => {\n        this.setState({\n          published: response.data.published,\n          submitted: true\n        });\n        console.log(response.data);\n        this.props.history.push('/');\n      }).catch(e => {\n        console.log(e);\n        this.setState({\n          errorMessage: 'Internal server error!'\n        });\n      });\n    } else {\n      this.setState({\n        errorMessage: error.message\n      });\n    }\n  }\n\n  saveCustomer() {\n    var data = this.state.customer;\n    var error = this.validateCustomer();\n    var dobArr = data.dateOfBirth.split('/');\n    var newData = { ...data\n    };\n    var jsonDob = dobArr[2] + '-' + dobArr[1] + '-' + dobArr[0] + 'T00:00:00';\n    newData.dateOfBirth = jsonDob;\n\n    if (error.isValid) {\n      this.setState({\n        errorMessage: ''\n      });\n      CustomerDataService.create(newData).then(response => {\n        this.setState({\n          published: response.data.published,\n          submitted: true\n        });\n        console.log(response.data);\n      }).catch(e => {\n        console.log(e);\n        this.setState({\n          errorMessage: 'Internal server error!'\n        });\n      });\n    } else {\n      this.setState({\n        errorMessage: error.message\n      });\n    }\n  }\n\n  newCustomer() {\n    this.setState({\n      id: null,\n      title: \"\",\n      description: \"\",\n      published: false,\n      submitted: false\n    });\n  }\n\n  render() {\n    const {\n      errorMessage\n    } = this.state;\n    const existingCustomer = this.state.customer;\n    return React.createElement(\"div\", {\n      className: \"submit-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, this.state.submitted ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"Customer is added!\"), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.newCustomer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"Add\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \" \", existingCustomer.customerId > 0 ? 'Update Customer' : 'Add Customer', \" \"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"salutation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"Title \", React.createElement(\"span\", {\n      className: \"text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"select\", {\n      className: \"form-control\",\n      onChange: this.onChangeTitle,\n      name: \"salutation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"Mr.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \"Mr.\"), React.createElement(\"option\", {\n      value: \"Mrs.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"Mrs.\"), React.createElement(\"option\", {\n      value: \"Miss.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"Miss.\"), React.createElement(\"option\", {\n      value: \"Mstr.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, \"Mstr.\"))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"firstName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"First Name \", React.createElement(\"span\", {\n      className: \"text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"input\", {\n      type: \"text\",\n      autoComplete: \"off\",\n      className: \"form-control\",\n      id: \"firstName\",\n      required: true,\n      value: this.state.customer.firstName,\n      onChange: this.onChangeFirstName,\n      name: \"firstName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"lastName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, \"Last Name \", React.createElement(\"span\", {\n      className: \"text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"input\", {\n      type: \"text\",\n      autoComplete: \"off\",\n      className: \"form-control\",\n      id: \"lastName\",\n      required: true,\n      value: this.state.customer.lastName,\n      onChange: this.onChangeLastName,\n      name: \"lastName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"emailAddress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"Email \", React.createElement(\"span\", {\n      className: \"text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"input\", {\n      type: \"text\",\n      autoComplete: \"off\",\n      className: \"form-control\",\n      id: \"emailAddress\",\n      required: true,\n      value: this.state.customer.emailAddress,\n      onChange: this.onChangeEmail,\n      name: \"emailAddress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"dateOfBirth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, \"Date of Birth \", React.createElement(\"span\", {\n      className: \"text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"input\", {\n      type: \"text\",\n      autoComplete: \"off\",\n      className: \"form-control\",\n      id: \"dateOfBirth\",\n      required: true,\n      value: this.formatDateForCustomer(this.state.customer).dateOfBirth,\n      onChange: this.onChangeDateOfBirth,\n      name: \"dateOfBirth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }), \"ex: 15/06/1997\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"mobilePhoneNo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, \"Phone Number\"), React.createElement(\"input\", {\n      type: \"text\",\n      autoComplete: \"off\",\n      className: \"form-control\",\n      id: \"mobilePhoneNo\",\n      required: true,\n      value: this.state.customer.mobilePhoneNo,\n      onChange: this.onChangePhoneNumber,\n      name: \"mobilePhoneNo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"streetAddress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, \"Address\"), React.createElement(\"input\", {\n      type: \"text\",\n      autoComplete: \"off\",\n      className: \"form-control\",\n      id: \"streetAddress\",\n      required: true,\n      value: this.state.customer.streetAddress,\n      onChange: this.onChangeAddress,\n      name: \"streetAddress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"suburbCity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, \"Suburb\"), React.createElement(\"input\", {\n      type: \"text\",\n      autoComplete: \"off\",\n      className: \"form-control\",\n      id: \"suburbCity\",\n      required: true,\n      value: this.state.customer.suburbCity,\n      onChange: this.onChangeSuburb,\n      name: \"suburbCity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"postCode\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, \"Postcode\"), React.createElement(\"input\", {\n      type: \"text\",\n      autoComplete: \"off\",\n      className: \"form-control\",\n      id: \"postCode\",\n      required: true,\n      value: this.state.customer.postCode,\n      onChange: this.onChangePostcode,\n      name: \"postCode\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, existingCustomer.customerId > 0 ? React.createElement(\"button\", {\n      onClick: this.updateCustomer,\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, \" Update \") : React.createElement(\"button\", {\n      onClick: this.saveCustomer,\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, \" Add \")), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, errorMessage !== '' ? React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, errorMessage) : null)));\n  }\n\n}","map":{"version":3,"sources":["C:/Dev/Malindo/MalindoTestUI/react-ui/src/components/add-customer.js"],"names":["React","Component","CustomerDataService","AddCustomer","constructor","props","onChangeTitle","bind","onChangeFirstName","onChangeLastName","onChangeEmail","onChangeDateOfBirth","onChangePhoneNumber","onChangeAddress","onChangeSuburb","onChangePostcode","saveCustomer","updateCustomer","newCustomer","initialise","getCustomer","formatDateForCustomer","state","customer","title","id","published","submitted","errorMessage","componentDidMount","customerId","match","params","test","get","then","response","setState","data","console","log","catch","e","undefined","dateOfBirth","includes","length","stringdate","newdate","replace","year","substr","month","day","formattedDate","setCustomer","target","value","firstName","lastName","emailAddress","mobilePhoneNo","streetAddress","suburbCity","postCode","validateCustomer","isValid","message","error","dobArr","split","newData","jsonDob","update","history","push","create","description","render","existingCustomer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport CustomerDataService from \"../services/customer.service\";\r\n\r\nexport default class AddCustomer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.onChangeFirstName = this.onChangeFirstName.bind(this);\r\n    this.onChangeLastName = this.onChangeLastName.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangeDateOfBirth = this.onChangeDateOfBirth.bind(this);\r\n    this.onChangePhoneNumber = this.onChangePhoneNumber.bind(this);\r\n    this.onChangeAddress = this.onChangeAddress.bind(this);\r\n    this.onChangeSuburb = this.onChangeSuburb.bind(this);\r\n    this.onChangePostcode = this.onChangePostcode.bind(this);\r\n    this.saveCustomer = this.saveCustomer.bind(this);\r\n    this.updateCustomer = this.updateCustomer.bind(this);\r\n    this.newCustomer = this.newCustomer.bind(this);    \r\n    this.initialise = this.initialise.bind(this);  \r\n    this.getCustomer = this.getCustomer.bind(this);  \r\n    this.formatDateForCustomer=this.formatDateForCustomer.bind(this);\r\n\r\n    this.initialise();\r\n  }\r\n\r\n  initialise(){\r\n    this.state = {\r\n      customer: {title: 'Mr.'},      \r\n      id: null,\r\n      published: false,\r\n      submitted: false,\r\n      errorMessage: ''   \r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const customerId = this.props.match.params.id;\r\n    if(customerId){\r\n      this.getCustomer(customerId);\r\n    }\r\n    var test=this.state.customer;\r\n  }\r\n\r\n  getCustomer(id) {\r\n    CustomerDataService.get(id)\r\n      .then(response => {\r\n        this.setState({\r\n          customer: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  formatDateForCustomer(customer){\r\n    if(customer.customerId!==undefined && customer.dateOfBirth!==undefined \r\n      && customer.customerId>0 )\r\n    {\r\n      if(customer.dateOfBirth.includes('T') && customer.dateOfBirth.length>10){\r\n          var stringdate = customer.dateOfBirth;\r\n          var newdate=stringdate.replace(\"T00:00:00\")\r\n          var year=newdate.substr(0,4);\r\n          var month=newdate.substr(5,2);\r\n          var day=newdate.substr(8,2);\r\n          var formattedDate=day + \"/\" + month + \"/\" + year\r\n          customer.dateOfBirth=formattedDate;\r\n        return customer;\r\n      }\r\n    }\r\n    return customer;\r\n  }\r\n\r\n  setCustomer(customer) {\r\n     this.setState({\r\n      customer: customer\r\n    });\r\n  }\r\n\r\n  onChangeTitle(e) {   \r\n    const customer = {...this.state.customer};\r\n    customer.title = e.target.value;\r\n    this.setCustomer(customer);\r\n  }\r\n\r\n  onChangeFirstName(e) {\r\n    const customer = {...this.state.customer};\r\n    customer.firstName = e.target.value;\r\n    this.setCustomer(customer);\r\n  }\r\n\r\n  onChangeLastName(e) {\r\n    const customer = {...this.state.customer};\r\n    customer.lastName = e.target.value;\r\n    this.setCustomer(customer);\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    const customer = {...this.state.customer};\r\n    customer.emailAddress = e.target.value;\r\n    this.setCustomer(customer);\r\n  }\r\n\r\n  onChangeDateOfBirth(e) {\r\n    const customer = {...this.state.customer};\r\n    customer.dateOfBirth = e.target.value;\r\n    this.setCustomer(customer);\r\n  }\r\n\r\n  onChangePhoneNumber(e) {\r\n    const customer = {...this.state.customer};\r\n    customer.mobilePhoneNo = e.target.value;\r\n    this.setCustomer(customer);\r\n  }\r\n\r\n  onChangeAddress(e) {\r\n    const customer = {...this.state.customer};\r\n    customer.streetAddress = e.target.value;\r\n    this.setCustomer(customer);\r\n  }\r\n\r\n  onChangeSuburb(e) {\r\n    const customer = {...this.state.customer};\r\n    customer.suburbCity = e.target.value;\r\n    this.setCustomer(customer);\r\n  }\r\n\r\n  onChangePostcode(e) {\r\n    const customer = {...this.state.customer};\r\n    customer.postCode = e.target.value;\r\n    this.setCustomer(customer);\r\n  }\r\n\r\n  validateCustomer() {\r\n    var customer = this.state.customer;\r\n\r\n    if(customer.firstName === undefined || customer.firstName === '') {\r\n      return {isValid: false, message: 'First Name cannot be empty!'};      \r\n    }\r\n     \r\n    if(!(/^[a-zA-Z ]+$/.test(customer.firstName))) {\r\n      return {isValid: false, message: 'Please enter only alphabetical letters for First Name!'};      \r\n    }\r\n\r\n    if(customer.lastName === undefined || customer.lastName === '') {\r\n      return {isValid: false, message: 'Last Name cannot be empty!'};      \r\n    }\r\n     \r\n    if(!(/^[a-zA-Z ]+$/.test(customer.lastName))) {\r\n      return {isValid: false, message: 'Please enter only alphabetical letters for Last Name!'};      \r\n    }\r\n\r\n    if(customer.emailAddress === undefined || customer.emailAddress === '') {\r\n      return {isValid: false, message: 'Email cannot be empty!'};      \r\n    }\r\n     \r\n    if(!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(customer.emailAddress))) {\r\n      return {isValid: false, message: 'Invalid emailAddress!'};      \r\n    }\r\n\r\n    if(customer.dateOfBirth === undefined || customer.dateOfBirth === '') {\r\n      return {isValid: false, message: 'Date of Birth cannot be empty!'};      \r\n    }\r\n     \r\n    if(!(/^([0-9]{2})\\/([0-9]{2})\\/([0-9]{4})$/.test(customer.dateOfBirth))) {\r\n      return {isValid: false, message: 'Invalid date of birth!'};      \r\n    }\r\n     \r\n    if(customer.mobilePhoneNo !== undefined && customer.mobilePhoneNo !== '' && !(/^[0-9]+$/.test(customer.mobilePhoneNo))) {\r\n      return {isValid: false, message: 'Please enter only numerics for Phone Number!'};      \r\n    }  \r\n\r\n    if(customer.postCode !== undefined && customer.postCode !== '' && !(/^[0-9]+$/.test(customer.postCode))) {\r\n      return {isValid: false, message: 'Please enter only numerics for Postcode!'};      \r\n    } \r\n    \r\n    return {isValid: true, message: ''};\r\n  }\r\n\r\n\r\n  updateCustomer() {\r\n    var data = this.state.customer;\r\n    var error = this.validateCustomer();\r\n    var dobArr = data.dateOfBirth.split('/');\r\n    var newData = {...data}\r\n    var jsonDob = dobArr[2] + '-' + dobArr[1] + '-' + dobArr[0] + 'T00:00:00';\r\n    newData.dateOfBirth = jsonDob;\r\n\r\n    if(error.isValid) {\r\n      this.setState({errorMessage: ''})   \r\n      CustomerDataService.update (data.customerId, newData)\r\n      .then(response => {\r\n        this.setState({\r\n          published: response.data.published,     \r\n          submitted: true\r\n        });\r\n        console.log(response.data);\r\n        this.props.history.push('/')\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n        this.setState({errorMessage: 'Internal server error!'})\r\n      });\r\n    }\r\n    else {\r\n      this.setState({errorMessage: error.message});\r\n    }\r\n  }\r\n\r\n  saveCustomer() {\r\n    var data = this.state.customer;\r\n    var error = this.validateCustomer();\r\n    var dobArr = data.dateOfBirth.split('/');\r\n    var newData = {...data}\r\n    var jsonDob = dobArr[2] + '-' + dobArr[1] + '-' + dobArr[0] + 'T00:00:00';\r\n    newData.dateOfBirth = jsonDob;\r\n\r\n    if(error.isValid) {\r\n      this.setState({errorMessage: ''})       \r\n      CustomerDataService.create(newData)\r\n      .then(response => {\r\n        this.setState({\r\n          published: response.data.published,     \r\n          submitted: true\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n        this.setState({errorMessage: 'Internal server error!'})\r\n      });\r\n    }\r\n    else {\r\n      this.setState({errorMessage: error.message});\r\n    }\r\n  }\r\n\r\n  newCustomer() {\r\n    this.setState({\r\n      id: null,\r\n      title: \"\",\r\n      description: \"\",\r\n      published: false,\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { errorMessage} = this.state;\r\n    const existingCustomer=this.state.customer\r\n\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>Customer is added!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newCustomer}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h4> { existingCustomer.customerId>0? 'Update Customer':'Add Customer' } </h4>\r\n           \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"salutation\">Title <span className=\"text-danger\">*</span></label>\r\n              <select className=\"form-control\" onChange={this.onChangeTitle} name=\"salutation\">\r\n                <option value=\"Mr.\">Mr.</option>\r\n                <option value=\"Mrs.\">Mrs.</option>\r\n                <option value=\"Miss.\">Miss.</option>\r\n                <option value=\"Mstr.\">Mstr.</option>    \r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"firstName\">First Name <span className=\"text-danger\">*</span></label>\r\n              <input\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                className=\"form-control\"\r\n                id=\"firstName\"\r\n                required\r\n                value={this.state.customer.firstName}\r\n                onChange={this.onChangeFirstName}\r\n                name=\"firstName\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"lastName\">Last Name <span className=\"text-danger\">*</span></label>\r\n              <input\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                className=\"form-control\"\r\n                id=\"lastName\"\r\n                required\r\n                value={this.state.customer.lastName}\r\n                onChange={this.onChangeLastName}\r\n                name=\"lastName\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"emailAddress\">Email <span className=\"text-danger\">*</span></label>\r\n              <input\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                className=\"form-control\"\r\n                id=\"emailAddress\"\r\n                required\r\n                value={this.state.customer.emailAddress}\r\n                onChange={this.onChangeEmail}\r\n                name=\"emailAddress\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"dateOfBirth\">Date of Birth <span className=\"text-danger\">*</span></label>\r\n              <input\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                className=\"form-control\"\r\n                id=\"dateOfBirth\"\r\n                required\r\n                value={this.formatDateForCustomer(this.state.customer).dateOfBirth}\r\n                onChange={this.onChangeDateOfBirth}\r\n                name=\"dateOfBirth\"\r\n              />\r\n              ex: 15/06/1997\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"mobilePhoneNo\">Phone Number</label>\r\n              <input\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                className=\"form-control\"\r\n                id=\"mobilePhoneNo\"\r\n                required\r\n                value={this.state.customer.mobilePhoneNo}\r\n                onChange={this.onChangePhoneNumber}\r\n                name=\"mobilePhoneNo\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"streetAddress\">Address</label>\r\n              <input\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                className=\"form-control\"\r\n                id=\"streetAddress\"\r\n                required\r\n                value={this.state.customer.streetAddress}\r\n                onChange={this.onChangeAddress}\r\n                name=\"streetAddress\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"suburbCity\">Suburb</label>\r\n              <input\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                className=\"form-control\"\r\n                id=\"suburbCity\"\r\n                required\r\n                value={this.state.customer.suburbCity}\r\n                onChange={this.onChangeSuburb}\r\n                name=\"suburbCity\"\r\n              />\r\n            </div>\t\t\t\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"postCode\">Postcode</label>\r\n              <input\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                className=\"form-control\"\r\n                id=\"postCode\"\r\n                required\r\n                value={this.state.customer.postCode}\r\n                onChange={this.onChangePostcode}\r\n                name=\"postCode\"\r\n              />\r\n            </div>            \r\n\r\n            <div className=\"form-group\">\r\n\r\n            {existingCustomer.customerId>0  \r\n            ? <button onClick={this.updateCustomer} className=\"btn btn-success\"> Update </button>\r\n            : <button onClick={this.saveCustomer} className=\"btn btn-success\"> Add </button>\r\n      }\r\n\r\n            \r\n            </div> \r\n\r\n            <div className=\"form-group\">     \r\n                {errorMessage !== '' ? \r\n                  <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {errorMessage}\r\n                  </div>\r\n                  : null} \r\n            </div>\r\n            \r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}